{"version":3,"sources":["firebase.js","Post/Post.js","ImageUpload.js","App.js","serviceWorker.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","storage","Post","postId","user","imageUrl","username","caption","useState","comments","setComments","comment","setComment","useEffect","unsubscribe","collection","doc","orderBy","onSnapshot","snapshot","docs","map","id","data","className","Avatar","alt","displayName","onClick","delete","onDelete","src","key","text","class","commentId","console","log","type","placeholder","value","onChange","event","target","disabled","preventDefault","add","timestamp","FieldValue","serverTimestamp","ImageUpload","image","setImage","progress","setProgress","setCaption","max","style","margin","files","Button","ref","name","put","on","Math","round","bytesTransferred","totalBytes","error","alert","message","child","getDownloadURL","then","url","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","App","classes","modalStyle","posts","setPosts","open","setOpen","setUserName","password","setPassword","email","setEmail","setUser","login","setLogin","onAuthStateChanged","authUser","post","Modal","onClose","Input","e","createUserWithEmailAndPassword","updateProfile","catch","signInWithEmailAndPassword","marginRight","signOut","textAlign","p","index","maxWidth","hideCaption","containerTagName","protocol","injectScript","onLoading","onSuccess","onAfterRender","onFailure","textDecoration","listStyleType","paddingBottom","paddingRight","href","color","height","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ccba730a.chunk.js","sourcesContent":["import firebase from 'firebase'\r\n\r\nconst firebaseApp=firebase.initializeApp({\r\n  apiKey: \"AIzaSyC-Q1PwFDN1xcKIX5-aczSNgwTMID1aYP4\",\r\n  authDomain: \"insta-final-b55fe.firebaseapp.com\",\r\n  databaseURL: \"https://insta-final-b55fe.firebaseio.com\",\r\n  projectId: \"insta-final-b55fe\",\r\n  storageBucket: \"insta-final-b55fe.appspot.com\",\r\n  messagingSenderId: \"126124558391\",\r\n  appId: \"1:126124558391:web:5548f3ea52cbee8fb817b2\",\r\n  measurementId: \"G-H0Y9P1K2NR\"\r\n})\r\n\r\nconst db=firebaseApp.firestore()\r\nconst auth=firebase.auth();\r\nconst storage=firebase.storage()\r\n\r\nexport{db,auth,storage}\r\n","import React,{useState,useEffect} from 'react'\r\nimport './Post.css'\r\nimport {db} from '../firebase'\r\nimport firebase from 'firebase'\r\nimport {Avatar} from '@material-ui/core'\r\n\r\n\r\nconst Post=({postId,user,imageUrl,username,caption})=>{\r\n    const [comments,setComments]=useState([])\r\n    const[comment,setComment]=useState('')\r\n    useEffect(()=>{\r\n        let unsubscribe\r\n        if(postId){\r\n            unsubscribe=db.collection(\"posts\")\r\n            .doc(postId)\r\n            .collection(\"comments\")\r\n            .orderBy(\"timestamp\",\"desc\")\r\n            .onSnapshot((snapshot)=>{\r\n            setComments(snapshot.docs.map(doc=>({\r\n                id:doc.id,\r\n               comment: doc.data()\r\n             })))\r\n            })\r\n        }\r\n        return ()=>{\r\n            unsubscribe()\r\n        }\r\n            },[postId])\r\n            const postComment=(event)=>{\r\n            event.preventDefault()\r\n            db.collection(\"posts\").doc(postId).collection(\"comments\").add({\r\n                text:comment,\r\n                username:user.displayName,\r\n                timestamp:firebase.firestore.FieldValue.serverTimestamp(),\r\n            })\r\n            setComment('')\r\n            }\r\n        \r\n   const onDelete=(postId)=>{\r\n    db.collection(\"posts\").doc(postId).delete()\r\n   }\r\n  \r\n   const commentDelete=(commentId)=>{\r\n       console.log('delete')\r\n       db.collection(\"posts\").doc(postId).collection(\"comments\").doc(commentId).delete();\r\n   }\r\n    return(\r\n    <div className=\"post\">\r\n        <div className=\"post_header\">\r\n            <Avatar alt=\"Henry\"></Avatar>\r\n            <h3 className=\"username\">{username}</h3>\r\n\r\n            {\r\n        !user?null:username===user.displayName?<div className=\"deletebutton\"><button className=\"delete\"\r\n        onClick={()=>onDelete(postId)}>Delete Post</button></div>:null\r\n    }\r\n            </div>\r\n            <img className=\"post_image\" src={imageUrl} alt=\"cards\"/>\r\n        <h4 className=\"caption\"><strong className=\"username\">{username}:</strong>{caption}\r\n        </h4>\r\n        <div className=\"post_comments\">\r\n        {comments.map(({id,comment})=>{\r\n            return(\r\n                <div className=\"comment_align\" key={id}>\r\n                   <p className=\"caption\"><strong className=\"username\">{comment.username}</strong>:{comment.text}</p>\r\n                  {\r\n                      !user?null:comment.username===user.displayName?<button class=\"comment_button\" onClick={()=>commentDelete(id)}>Delete Comment</button>:null\r\n                  }  \r\n                </div>\r\n            )}\r\n )} \r\n        </div>\r\n        {user&& <form>\r\n           <div className=\"post_commentBox\">\r\n            <input \r\n            type=\"text\"\r\n            className=\"post_input\"\r\n            placeholder=\"Add a comment\"\r\n            value={comment}\r\n            onChange={(event)=>setComment(event.target.value)}/>\r\n            <button\r\n            disabled={!comment}\r\n            type=\"submit\"\r\n            className=\"post_button\"\r\n            onClick={postComment}\r\n            >Post</button> \r\n            </div>\r\n        </form>\r\n        }\r\n   \r\n    </div>\r\n)\r\n}\r\n\r\nexport default Post","\r\nimport React,{useState} from 'react'\r\nimport { Button } from '@material-ui/core';\r\nimport {storage,db} from './firebase'\r\nimport firebase from 'firebase'\r\nimport './ImageUpload.css'\r\n\r\nconst ImageUpload=({username})=>{\r\n    const [image,setImage]=useState(null)\r\n    const[progress,setProgress]=useState(0)\r\n    const[caption,setCaption]=useState('')\r\n\r\nconst handleChange=(event)=>{\r\n  if(event.target.files[0]){\r\n  setImage(event.target.files[0])\r\n}\r\n}\r\nconst handleUpload=()=>{\r\n const uploadTask=storage.ref(`images/${image.name}`).put(image)\r\n uploadTask.on(\r\n     \"state_changed\",\r\n     (snapshot)=>{\r\n         const progress=Math.round(\r\n             (snapshot.bytesTransferred/snapshot.totalBytes)*100\r\n         )\r\n         setProgress(progress)\r\n     },\r\n     (error)=>{\r\n         alert(error.message)\r\n     },\r\n     ()=>{\r\n         storage\r\n         .ref(\"images\")\r\n         .child(image.name)\r\n         .getDownloadURL()\r\n         .then(url=>{\r\n             db.collection(\"posts\").add({\r\n                 timestamp:firebase.firestore.FieldValue.serverTimestamp(),\r\n                 caption:caption,\r\n                 imageUrl:url,\r\n                 username:username\r\n             })\r\n             setProgress(0)\r\n             setCaption('')\r\n             setImage(null)\r\n         })\r\n     }\r\n )\r\n}\r\n\r\n    return(\r\n        <div className=\"imageUpload\">\r\n            <progress className=\"progress\" value={progress} max=\"100\" />\r\n            <input className=\"progress\"  type=\"text\" placeholder=\"Enter a Caption\" onChange={(event)=>setCaption(event.target.value)}/>\r\n            <input style={{margin:\"20px auto\"}} type=\"file\" onChange={handleChange}/>\r\n            <Button style={{margin:\"10 100 10 0\"}} onClick={handleUpload}>Upload</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageUpload\r\n","import {useState,useEffect} from 'react';\nimport React from 'react'\nimport './App.css';\nimport Post from './Post/Post'\nimport {db} from './firebase'\nimport {auth} from './firebase'\nimport {makeStyles} from '@material-ui/core/styles'\nimport Modal from '@material-ui/core/Modal'\nimport { Button } from '@material-ui/core';\nimport {Input} from '@material-ui/core'\nimport ImageUpload from './ImageUpload'\nimport InstagramEmbed from 'react-instagram-embed'\nimport {FaGithub,FaFacebook,FaInstagram,FaSnapchatGhost,FaYoutube,FaHeart} from 'react-icons/fa'\n\n\nfunction getModalStyle() {\n  const top = 50\n  const left = 50 \n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\n \nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\n\nfunction App() {\n  const classes=useStyles()\n  const [modalStyle]=useState(getModalStyle)\n  const [posts,setPosts]=useState([])\n  const [open,setOpen]=useState(false)\n  const [username,setUserName]=useState('')\n  const[password,setPassword]=useState('')\nconst [email,setEmail]=useState('')\nconst [user,setUser]=useState(null)\nconst[login,setLogin]=useState(false)\n\nuseEffect(()=>{\n const unsubscribe= auth.onAuthStateChanged((authUser)=>{\n    if(authUser){\n      setUser(authUser) \n    }\n    else{\n      setUser(null)\n    }\n  })\n  return ()=>{\n    unsubscribe()\n  }\n},[user,username])\n\n\n\n  useEffect(()=>{\n    db.collection('posts').orderBy(\"timestamp\",\"desc\").onSnapshot(snapshot=>{\n      setPosts(snapshot.docs.map(doc=>({\n        id:doc.id,\n        post:doc.data()\n      })))\n    })\n  },[])\nconst signup=(event)=>{\nevent.preventDefault();\nauth.createUserWithEmailAndPassword(email,password).then(authUser=>{\n return authUser.user.updateProfile({displayName:username})\n})\n.catch(error=>alert(error.message))\nsetOpen(false)\n}\nconst signin=(event)=>{\n  event.preventDefault()\n  auth.signInWithEmailAndPassword(email,password)\n  .catch(error=>alert(error.message))\n  setLogin(false)\n}\n\n\nreturn(\n\n  <div className=\"app\">\n    \n     <Modal\n        open={open}\n        onClose={()=>setOpen(false)}\n      >\n      <div style={modalStyle} className={classes.paper}>\n        <form className=\"app_signup\">\n        <center>\n      <div className=\"app_header\">\n      <img className=\"logo\" src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\" alt=\"logo\"/>\n    </div>\n    </center>\n        <Input\n        placeholder=\"Email\"\n        type=\"text\"\n        value={email}\n        onChange={(e)=>setEmail(e.target.value)}>\n        </Input>\n        <Input\n        placeholder=\"Password\"\n        type=\"password\"\n        value={password}\n        onChange={(e)=>setPassword(e.target.value)}>\n        </Input>\n        <Input\n        placeholder=\"Username\"\n        type=\"text\"\n        value={username}\n        onChange={(e)=>setUserName(e.target.value)}>\n        </Input>\n        <Button type=\"submit\" onClick={signup}>Sign Up</Button>\n        </form>\n        </div>\n      </Modal>\n      <Modal\n        open={login}\n        onClose={()=>setLogin(false)}\n      >\n      <div style={modalStyle} className={classes.paper}>\n        <form className=\"app_signup\">\n        <center>\n      <div className=\"app_header\">\n      <img className=\"logo\" src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\" alt=\"logo\"/>\n    </div>\n    </center>\n        <Input\n        placeholder=\"Email\"\n        type=\"text\"\n        value={email}\n        onChange={(e)=>setEmail(e.target.value)}>\n        </Input>\n        <Input\n        placeholder=\"Password\"\n        type=\"password\"\n        value={password}\n        onChange={(e)=>setPassword(e.target.value)}>\n        </Input>\n        <Button type=\"submit\" onClick={signin}>Sign In</Button>\n        </form>\n        </div>\n      </Modal>\n    <div className=\"app_header\">\n      <img className=\"logo\" src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\" alt=\"logo\"/>\n      <p className=\"textbetween\">Share Your Memories</p>\n      {user?  <Button className=\"app_singin\" style={{border:\"1px solid black\",marginRight:\"20px\"}} onClick={()=>auth.signOut()}>Logout</Button>:\n    <div className=\"app_signin\"><Button onClick={()=>setLogin(true)}>Sign In</Button>\n    <Button onClick={()=>setOpen(true)}>Sign Up</Button></div>}\n    </div>\n    <div style={{border:\"1px dotted lightgray\"}}>\n    {user?.displayName? (<ImageUpload username={user.displayName}/>):\n    (<h3 style={{textAlign:\"center\"}}> To Upload,You Need To Login First</h3>)}\n    </div>\n    <div className=\"app_posts\">\n      <div className=\"app_postsleft\">\n      {\n      posts.map((p,index)=>\n        <Post key={p.id} postId={p.id} user={user} imageUrl={p.post.imageUrl} caption={p.post.caption} username={p.post.username}\n        />)\n    }\n      </div>\n      <div className=\"app_postsright\">\n      <InstagramEmbed\n  url='https://www.instagram.com/p/CB6Y_JAleZx/?utm_source=ig_web_copy_link'\n  maxWidth={320}\n  hideCaption={false}\n  containerTagName='div'\n  protocol=''\n  injectScript\n  onLoading={() => {}}\n  onSuccess={() => {}}\n  onAfterRender={() => {}}\n  onFailure={() => {}}\n/>\n<InstagramEmbed\n  url='https://www.instagram.com/p/CBgJalrlsGe/?utm_source=ig_web_copy_link'\n  maxWidth={320}\n  hideCaption={false}\n  containerTagName='div'\n  protocol=''\n  injectScript\n  onLoading={() => {}}\n  onSuccess={() => {}}\n  onAfterRender={() => {}}\n  onFailure={() => {}}\n/>\n      </div>\n    </div>\n    <footer className=\"foot\">\n    <p >Created by Manan with Love   <FaHeart/></p>\n      <p style={{textDecoration:\"underline\"}}>About Us</p>\n    <ul style={{listStyleType:\"none\",paddingBottom:\"40px\",margin:\"0 auto\",paddingRight:\"30px\"}}>\n      <li className=\"link\">Copyright2020 Manan\n      </li>\n      <li className=\"link\">Email:vora.manan10@gmail.com</li>\n    </ul>\n    <div>\n    < a href=\"https://www.facebook.com/manan.vora.18\"><FaFacebook style={{padding:\"5px\",width:\"20px\",color:\"white\",height:\"auto\"}}/></a>\n     <a href=\"https://github.com/vora-manan\"><FaGithub style={{padding:\"5px\",width:\"20px\",color:\"white\",height:\"auto\"}}/></a> \n     <a href=\"https://www.snapchat.com/l/en-gb/\"><FaSnapchatGhost style={{padding:\"5px\",width:\"20px\",color:\"white\",height:\"auto\"}}/></a> \n     <a href=\"https://www.youtube.com/channel/UCM5EMaivaQ6_70cYuQAIjpw\"><FaYoutube style={{padding:\"5px\",width:\"20px\",color:\"white\",height:\"auto\"}}/></a> \n     <a href=\"https://www.instagram.com/vora.manan/?hl=en\"> <FaInstagram style={{padding:\"5px\",width:\"20px\",color:\"white\",height:\"auto\"}}/></a>\n\n    </div>\n    </footer>\n  </div>\n)\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}